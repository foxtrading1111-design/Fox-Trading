
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.InvestmentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  amount: 'amount',
  package_name: 'package_name',
  monthly_profit_rate: 'monthly_profit_rate',
  status: 'status',
  start_date: 'start_date',
  unlock_date: 'unlock_date'
};

exports.Prisma.TransactionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  amount: 'amount',
  type: 'type',
  income_source: 'income_source',
  description: 'description',
  timestamp: 'timestamp'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  email: 'email',
  password_hash: 'password_hash',
  referral_code: 'referral_code',
  sponsor_id: 'sponsor_id',
  position_in_sponsor_tree: 'position_in_sponsor_tree',
  role: 'role',
  googleId: 'googleId',
  created_at: 'created_at'
};

exports.Prisma.WalletsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  balance: 'balance'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  investments: 'investments',
  transactions: 'transactions',
  users: 'users',
  wallets: 'wallets'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Kunal\\OneDrive\\Desktop\\trade\\trade\\api\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "seed": "node prisma/seed.cjs",
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Kunal\\OneDrive\\Desktop\\trade\\trade\\api\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  seed     = \"node prisma/seed.cjs\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel investments {\n  id                  String   @id @default(cuid()) @db.VarChar(30)\n  user_id             String   @db.VarChar(30)\n  amount              Decimal  @db.Decimal(18, 2)\n  package_name        String   @db.VarChar(100)\n  monthly_profit_rate Decimal  @db.Decimal(5, 2)\n  status              String   @db.VarChar(10)\n  start_date          DateTime @db.Timestamp(6)\n  unlock_date         DateTime @db.Timestamp(6)\n  users               users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([user_id], map: \"idx_investments_user\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel transactions {\n  id            String   @id @default(cuid()) @db.VarChar(30)\n  user_id       String   @db.VarChar(30)\n  amount        Decimal  @db.Decimal(18, 2)\n  type          String   @db.VarChar(10)\n  income_source String   @db.VarChar(32)\n  description   String?\n  timestamp     DateTime @default(now()) @db.Timestamp(6)\n  users         users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([user_id, timestamp(sort: Desc)], map: \"idx_transactions_user_time\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel users {\n  id                       String         @id @default(cuid()) @db.VarChar(30)\n  full_name                String         @db.VarChar(200)\n  email                    String         @unique @db.VarChar(200)\n  password_hash            String?        @db.VarChar(200)\n  referral_code            String         @unique @db.VarChar(32)\n  sponsor_id               String?        @db.VarChar(30)\n  position_in_sponsor_tree String?        @db.VarChar(1)\n  role                     String         @default(\"USER\") @db.VarChar(10)\n  googleId                 String?        @unique @db.VarChar(100)\n  created_at               DateTime       @default(now()) @db.Timestamp(6)\n  investments              investments[]\n  transactions             transactions[]\n  users                    users?         @relation(\"usersTousers\", fields: [sponsor_id], references: [id], onUpdate: NoAction)\n  other_users              users[]        @relation(\"usersTousers\")\n  wallets                  wallets?\n\n  @@index([sponsor_id], map: \"idx_users_sponsor\")\n}\n\nmodel wallets {\n  id      String  @id @default(cuid()) @db.VarChar(30)\n  user_id String  @unique @db.VarChar(30)\n  balance Decimal @default(0) @db.Decimal(18, 2)\n  users   users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n",
  "inlineSchemaHash": "9164d91a1d7f252e39b3813c245acd7645c446fd5304feced572bfd5000e9237",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"investments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"package_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monthly_profit_rate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unlock_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"investmentsTousers\"}],\"dbName\":null},\"transactions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"income_source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"transactionsTousers\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"full_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referral_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsor_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position_in_sponsor_tree\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"investments\",\"kind\":\"object\",\"type\":\"investments\",\"relationName\":\"investmentsTousers\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"transactions\",\"relationName\":\"transactionsTousers\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"usersTousers\"},{\"name\":\"other_users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"usersTousers\"},{\"name\":\"wallets\",\"kind\":\"object\",\"type\":\"wallets\",\"relationName\":\"usersTowallets\"}],\"dbName\":null},\"wallets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"usersTowallets\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

